rm(list=ls())
require(mboost)
require(forecast)
source('functions.R')
source('simulated_models.R')

modelo_a = catch_r2(yta)
modelo_b = catch_r2(ytb)
modelo_c = catch_r2(ytc)
modelo_d = catch_r2(ytd)
modelo_e = catch_r2(yte)
modelo_f = catch_r2(ytf)

plot(1:12, modelo_a$vetor_h, ylim = c(0,1), xlab = 'h', xlim = c(1,12), ylab = 'R²', main = 'modelo_a')
plot(1:12, modelo_b$vetor_h, ylim = c(0,1), xlab = 'h', xlim = c(1,12), ylab = 'R²', main = 'modelo_b')
plot(1:12, modelo_c$vetor_h, ylim = c(0,1), xlab = 'h', xlim = c(1,12), ylab = 'R²', main = 'modelo_c')
plot(1:12, modelo_d$vetor_h, ylim = c(0,1), xlab = 'h', xlim = c(1,12), ylab = 'R²', main = 'modelo_d')
plot(1:12, modelo_e$vetor_h, ylim = c(0,1), xlab = 'h', xlim = c(1,12), ylab = 'R²', main = 'modelo_e')
plot(1:12, modelo_f$vetor_h, ylim = c(0,1), xlab = 'h', xlim = c(1,12), ylab = 'R²', main = 'modelo_f')


#df = data.frame(lag_1 = NA, lag_2=NA, lag_3 = NA, lag_4 = NA, lag_5 = NA, lag_6=NA, 
#                lag_7 = NA, lag_8 = NA,lag_9 = NA, lag_10=NA, lag_11 = NA, lag_12 = NA)
#for(j in 1:12){
#    for(i in 1:12){
#    modelo_1 = linear_model(yt=yt,h=i, p=j, n_out = 200)
#    df[i,j] <- mean(modelo_1$aic)
#}}
#which.min(lapply(df, mean))

