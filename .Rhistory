geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[3])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = bspline2, color = col[4])) +
geom_point(aes(y = bspline2), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[5])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tsboost2, color = col[6])) +
geom_point(aes(y = tsboost2), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[8])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ylab("R²") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_calc() +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', 'BSpline*', "TSBoost", 'TSBoost*','Tree')))
}
cut = which_splines_superior(all_cases)
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots1", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
cut
cut
which_splines_superior <- function(data_out){
vector = c()
for(i in 1:140){
temp <- create_df(data = data_out, i, 12)
condition = sum( ((temp[,'linear'] < temp[,'tsboost']) & (temp[,'linear'] < temp[,'bspline']))
& ((temp[,'bols'] < temp[,'tsboost']) & (temp[,'bols'] < temp[,'bspline'])) )
if(condition>=9){
vector = c(vector, i)
}
}
return(vector)
}
cut2 = which_splines_superior(all_cases)
cut
cut2
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots1", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 4)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline2, color = col[3])) +
geom_point(aes(y = bspline2), shape = 21, colour = "black") +
geom_line(aes(y = tsboost2, color = col[5])) +
geom_point(aes(y = tsboost2), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline*', "TSBoost*")))
}
which_splines_superior <- function(data_out){
vector = c()
for(i in 1:140){
temp <- create_df(data = data_out, i, 12)
condition = sum( ((temp[,'linear'] < temp[,'tsboost']) & (temp[,'linear'] < temp[,'bspline']))
& ((temp[,'bols'] < temp[,'tsboost']) & (temp[,'bols'] < temp[,'bspline'])) )
if(condition>=9){
vector = c(vector, i)
}
}
return(vector)
}
cut
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots1", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
which_splines_superior <- function(data_out){
vector = c()
for(i in 1:140){
temp <- create_df(data = data_out, i, 12)
condition = sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'bols'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
if(condition>=9){
vector = c(vector, i)
}
}
return(vector)
}
cut = which_splines_superior(all_cases)
cut
df = create_df(data = data, index = index_out, h =12)
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 4)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[3])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[5])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[5])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
}
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 4)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[3])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[5])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[5])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
}
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 4)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[3])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[5])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[5])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
}
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 4)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[3])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[5])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[6])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
}
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[3])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[5])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[6])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 7)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[3])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[5])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[6])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
}
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
which_splines_superior <- function(data_out){
vector = c()
for(i in 1:140){
temp <- create_df(data = data_out, i, 12)
condition = sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'bols'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
if(condition>=9){
vector = c(vector, i)
}
}
return(vector)
}
cut = which_splines_superior(all_cases)
cut
cut
cut
cut
cut
cut
cut
cut
cut
cut
cut
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
temp <- create_df(data = data_out, i, 12)
temp[,'linear']
temp[,'linear'] < temp[,'tree']
temp[,'linear'] < temp[,'tree']
temp[,'linear'] < temp[,'tree']
temp[,'linear'] < temp[,'tree']
temp[,'linear'] < temp[,'tree']
temp[,'linear'] < temp[,'tree']
temp[,'linear'] < temp[,'tree']
temp[,'bspline'] < temp[,'tree']
sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'bols'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'bols'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'bols'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'bols'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'bols'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
i
which_splines_superior <- function(data_out){
vector = c()
for(i in 1:140){
temp <- create_df(data = data_out, i, 12)
condition = sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'bols'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
if(condition>=9){
vector = c(vector, i)
}
}
return(vector)
}
cut = which_splines_superior(all_cases)
cut
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
which_splines_superior <- function(data_out){
vector = c()
for(i in 1:140){
temp <- create_df(data = data_out, i, 12)
condition = sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bspline'] < temp[,'tree']))
& ((temp[,'tsboost'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
if(condition>=9){
vector = c(vector, i)
}
}
return(vector)
}
cut = which_splines_superior(all_cases)
cut
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[1])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[1])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[1])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[1])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 7)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[1])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[1])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[1])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[1])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
}
cut = which_splines_superior(all_cases)
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 5)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
geom_line(aes(y = bspline, color = col[3])) +
geom_point(aes(y = bspline), shape = 21, colour = "black") +
geom_line(aes(y = tsboost, color = col[4])) +
geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[5])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
'BSpline', "TSBoost", "Tree")))
}
cut = which_splines_superior(all_cases)
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
which_splines_superior <- function(data_out){
vector = c()
for(i in 1:140){
temp <- create_df(data = data_out, i, 12)
condition = sum( ((temp[,'linear'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree']))
& ((temp[,'linear'] < temp[,'tree']) & (temp[,'bols'] < temp[,'tree'])) )
if(condition>=9){
vector = c(vector, i)
}
}
return(vector)
}
cut = which_splines_superior(all_cases)
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
cut
ggarrange(myplots[[6]],myplots[[7]],
ncol = 2, nrow=1, common.legend = TRUE, legend="bottom")
ggarrange(myplots[[6]],myplots[[7]],
ncol = 1, nrow=2, common.legend = TRUE, legend="bottom")
plot_data = function (index_out, data, h =12) {
df = create_df(data = data, index = index_out, h =12)
col = paletteer_d("RColorBrewer::Paired", 3)
return(plot <- ggplot(data = df, mapping = aes(x = h)) +
geom_line(aes(y = linear, color = col[1]), ) +
geom_point(aes(y = linear), shape = 21, colour = "black") +
geom_line(aes(y = bols, color = col[2])) +
geom_point(aes(y = bols), shape = 21, colour = "black") +
#  geom_line(aes(y = bspline, color = col[3])) +
#   geom_point(aes(y = bspline), shape = 21, colour = "black") +
#   geom_line(aes(y = tsboost, color = col[4])) +
#   geom_point(aes(y = tsboost), shape = 21, colour = "black") +
geom_line(aes(y = tree, color = col[3])) +
geom_point(aes(y = tree), shape = 21, colour = "black") +
ggtitle(Series[index_out]) +
ylim(0, 1) + # scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels = as.character(df$h), breaks = df$h) +
theme_excel_new() + xlab("h") + ylab("R²") + theme(axis.title=element_text(size=10)) +
scale_colour_manual(values = col,name = "Models", labels = c("Linear", "BOLS",
#'BSpline', "TSBoost",
"Tree")))
}
cut = which_splines_superior(all_cases)
myplots <- vector('list', length(cut))
k=1
for(i in cut){
temp_plot <- plot_data(index_out = i, all_cases)
myplots[[k]] <- temp_plot
k=k+1
ggsave(temp_plot, path="plots\\plots2", filename = paste0('plot_', i, '.tiff'), width = 6, height = 4, units = "in")
}
cut
ggarrange(myplots[[3]],myplots[[6]], myplots[[7]],myplots[[8]],
ncol = 2, nrow=2, common.legend = TRUE, legend="bottom")
