}
i
ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) + geom_line() + geom_point()
for(i in 1:6){
ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) + geom_line() + geom_point()
}
for(i in 1:6){
ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) + geom_line() + geom_point()
}
rm(list=ls())
require(mboost)
require(forecast)
require(ggplot2)
source('functions.R')
source('simulated_models.R')
modelo_a = catch_r2(yta)
modelo_b = catch_r2(ytb)
modelo_c = catch_r2(ytc)
modelo_d = catch_r2(ytd)
modelo_e = catch_r2(yte)
modelo_f = catch_r2(ytf)
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
print(i)
ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) + geom_line() + geom_point()
}
ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) + geom_line() + geom_point()
models[[i]]$teste
models[[i]]$teste = plot(AirPassengers)
models[[i]]$teste
models[[i]]$teste = plot(AirPassengers)
models$f
models$f$teste= 1
models$f
models$f$teste= plot(1)
models$f$teste
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) + geom_line() + geom_point()
}
models$f
models$a
models$a$plot
models$a$h
models$a$plot
par(mfrow=c(3,2))
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
par(mfrow=c(3,2))
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) + geom_line() + geom_point()
models[[i]]$plot
}
models$a
par(mfrow=c(3,2))
models$a
models$a
par(mfrow=c(3,2))
plot(1)
require(gridExtra)
install.packages('gridExtra')
require(gridExtra)
models
grid.arrange(models, ncol=2)
grid.arrange(models$a$plot, ncol=2)
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2))
+ geom_line() + geom_point() + xlab("R²")
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2))
+ geom_line() + geom_point() + xlab("R²")
}
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + xlab("R²")
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²")
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
modelo_a = catch_r2(yta, name = 'modelo_a')
source('functions.R')
source('simulated_models.R')
modelo_a = catch_r2(yta, name = 'modelo_a')
rm(list=ls())
require(mboost)
require(forecast)
require(ggplot2)
require(gridExtra)
source('functions.R')
source('functions.R')
source('simulated_models.R')
modelo_a = catch_r2(yta, name = 'modelo_a')
modelo_b = catch_r2(ytb, name = 'modelo_b')
modelo_c = catch_r2(ytc, name = 'modelo_c')
modelo_d = catch_r2(ytd, name = 'modelo_d')
modelo_e = catch_r2(yte, name = 'modelo_e')
modelo_f = catch_r2(ytf, name = 'modelo_f')
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) + xlim(1,12) + ylim(0,1)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) + xlim(1:12) + ylim(0,1)
}
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = factor(models[[i]]$h),'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) + xlim(1,12) + ylim(0,1)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
models$a
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = factor(models[[i]]$h),'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_point() + ylab("R²") + ggtitle(models[[i]]$name) + xlim(1,12) + ylim(0,1)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = factor(models[[i]]$h),'R2' = factor(models[[i]]$vetor_h)), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) + xlim(1,12) + ylim(0,1)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
for(i in 1:6){
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) + xlim(1,12) + ylim(0,1)
}
''
''
d
sa
ds
ad
sa
dsa
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) + xlim(1,12) + ylim(0,1)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) + xlim(1,12) + ylim(0,1) + scale_x_continuous(labels=as.character(x),breaks=h)
}
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
xlim(1,12) + ylim(0,1) + scale_x_continuous(labels=as.character(x),breaks=x)
}
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
xlim(1,12) + ylim(0,1) + scale_x_continuous(labels=as.character(h),breaks=h)
}
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
xlim(1,12) + ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
xlim(1,12) + ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h)
}
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h)
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(h),breaks=h)
}
require(ggthemes)
library('ggthemes')
install.packages('ggthemes')
require(ggthemes)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + ggthemes::theme_igray()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
print(i)
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_igray() + scale_fill_stata()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_excel_new() + scale_fill_stata()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
o
o
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_excel() + scale_fill_stata()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_map() + scale_fill_stata()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_gdocs() + scale_fill_stata()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_wsj() + scale_fill_stata()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_economist_white() + scale_fill_stata()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_economist_white() + scale_fill_stata()
}
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_economist_white()
}
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_get()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_base()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_tufte()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point() + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc() + ggthemes::circlefill_shape_pal()
}
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue", alpha = .1) + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue", alpha = .6) + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
rm(list=ls())
require(mboost)
require(forecast)
### for data visualization
require(ggplot2)
require(gridExtra)
require(ggthemes)
### adquiring our functions and objects
source('functions.R')
source('simulated_models.R')
modelo_a = catch_r2(yta, name = 'modelo_a')
modelo_b = catch_r2(ytb, name = 'modelo_b')
modelo_c = catch_r2(ytc, name = 'modelo_c')
modelo_d = catch_r2(ytd, name = 'modelo_d')
modelo_e = catch_r2(yte, name = 'modelo_e')
modelo_f = catch_r2(ytf, name = 'modelo_f')
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
models
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
plot(yta)
plot.ts(yta)
require(forecast)
require(stats)
rm(list=ls())
require(mboost)
require(stats)
### for data visualization
require(ggplot2)
require(gridExtra)
require(ggthemes)
### adquiring our functions and objects
source('functions.R')
source('simulated_models.R')
plot.ts(yta)
modelo_a = catch_r2(yta, name = 'modelo_a')
modelo_a$vetor_h
plot.ts(modelo_a$vetor_h)
source('simulated_models.R')
modelo_a = catch_r2(yta, name = 'modelo_a')
plot.ts(modelo_a$vetor_h)
rm(list=ls())
require(mboost)
require(stats)
### for data visualization
require(ggplot2)
require(gridExtra)
require(ggthemes)
### adquiring our functions and objects
source('functions.R')
source('simulated_models.R')
modelo_a = catch_r2(yta, name = 'modelo_a')
modelo_b = catch_r2(ytb, name = 'modelo_b')
modelo_c = catch_r2(ytc, name = 'modelo_c')
modelo_d = catch_r2(ytd, name = 'modelo_d')
modelo_e = catch_r2(yte, name = 'modelo_e')
modelo_f = catch_r2(ytf, name = 'modelo_f')
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
0:1:0.1
0:0.1:1
seq(0,1, by=0.1)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
scale_x_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) + ylim(0,1)
scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1))
scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + #scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
rm(list=ls())
require(mboost)
require(stats)
### for data visualization
require(ggplot2)
require(gridExtra)
require(ggthemes)
### adquiring our functions and objects
source('functions.R')
source('simulated_models.R')
modelo_a = catch_r2(yta, name = 'modelo_a')
modelo_b = catch_r2(ytb, name = 'modelo_b')
modelo_c = catch_r2(ytc, name = 'modelo_c')
modelo_d = catch_r2(ytd, name = 'modelo_d')
modelo_e = catch_r2(yte, name = 'modelo_e')
modelo_f = catch_r2(ytf, name = 'modelo_f')
models = list('a' = modelo_a, 'b' = modelo_b, 'c' = modelo_c, 'd' = modelo_d, 'e'= modelo_e,'f'= modelo_f)
for(i in 1:6){
models[[i]]$plot = ggplot(data = data.frame('h' = models[[i]]$h,'R2' = models[[i]]$vetor_h), mapping = aes(x = h, y = R2)) +
geom_line() + geom_point(shape = 21, colour = "blue") + ylab("R²") + ggtitle(models[[i]]$name) +
ylim(0,1) + #scale_y_continuous(labels=as.character(seq(0,1, by=0.1)),breaks=seq(0,1, by=0.1)) +
scale_x_continuous(labels=as.character(models[[i]]$h),breaks=models[[i]]$h) + theme_calc()
}
grid.arrange(models$a$plot, models$b$plot, models$c$plot, models$d$plot, models$e$plot,models$f$plot, ncol=2)
#df = data.frame(lag_1 = NA, lag_2=NA, lag_3 = NA, lag_4 = NA, lag_5 = NA, lag_6=NA,
#                lag_7 = NA, lag_8 = NA,lag_9 = NA, lag_10=NA, lag_11 = NA, lag_12 = NA)
#for(j in 1:12){
#    for(i in 1:12){
#    modelo_1 = linear_model(yt=yt,h=i, p=j, n_out = 200)
#    df[i,j] <- mean(modelo_1$aic)
#}}
#which.min(lapply(df, mean))
paste
paste('a', 'b')
paste('a', 'b', sep='')
paste('a', 'b', sep='') = a
paste('a', 'b', sep='') = 1
cat(paste('a', 'b', sep=''))
cat(paste('a', 'b', sep='')) = ab
cat(paste('a', 'b', sep='')) = 1
assign(paste('a', 'b', sep='')), 1)
assign(paste('a', 'b', sep=''))
assign(paste('a', 'b', sep='')), 1
assign(paste('a', 'b', sep='')), 1)
assign(paste('a', 'b', sep=''), 1)
ab
View(modelo_f)
install.packages('progress')
require(progress)
pb <- progress_bar$new(total = 100)
for (i in 1:100) {
pb$tick()
Sys.sleep(1 / 100)
}
pb <- progress_bar$new(total = 100)
for (i in 1:100) {
pb$tick()
Sys.sleep(1 / 100)
}
progress_bar
progress_bar$new
